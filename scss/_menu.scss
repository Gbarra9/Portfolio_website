// MENU BUTTON
.menu-btn {
  // takes container out of document flow
  position: absolute;
  z-index: 3;
  right: 2.1875rem; // positions the container to the top right of the screen
  top: 2.1875rem; // (2.1875rem = 35px)
  cursor: pointer; // turns cursor into pointer when user is within .menu-btn container range
  @include easeOut(); // transiton mixin
  .btn-line {
    // there are three div containers with .btn-line class, each div container has 28px width and 3px height
    width: 1.75rem; //(1.75rem = 28px)
    height: .1875rem; //(.1875rem = 3px;)
    margin: 0 0 .3125rem 0; // (.3125rem = 5px) bottom margin on all divs with this class
    background: #fff;
    @include easeOut();
  } // ROTATE INTO X WITH MENU LINES 
  // Note: JS added class 'close' to div with class 'menu-btn'
  // & refers to .menu-btn
  &.close {
    // rotates the btn-line 180deg
    transform: rotate(180deg);
    .btn-line {
      // Line 1 - Rotate
      // :nthchild() selects child element,takes numerical input value (numerical value indicates child element based on current order)
      &:nth-child(1) {
        // &:nth-child(1) targets first element/item with class of '.btn-line'
        transform: rotate(45deg) translate(.3125rem, .3125rem); //(.3125rem = 5px)
      } // Line 2 - Hide
      &:nth-child(2) {
        // &:nth-child(2) targets first element/item with class of '.btn-line'
        opacity: 0; // opacity 0 = fully transparent, hides 2nd btn-line
        // Line 3 - Rotate
      }
      &:nth-child(3) {
        // &:nth-child(3) targets first element/item with class of '.btn-line'
        // rotate -45deg, change inputs to 7px, -6px
        transform: rotate(-45deg) translate(.4375rem, -.375rem); //(.4375rem = 7px, .375rem = 6px)
      }
    }
  }
}

// MENU OVERLAY
.menu {
  // position stays in same place even when scrolling
  position: fixed;
  top: 0;
  width: 100%; //gives 100% width to menu coantainer
  opacity: 0.9; //creates transparency effect
  visibility: hidden; //hides menu container
  &.show {
    // NOTE: 'show' class gets added to menu from JS, when '.menu-btn' clicked
    visibility: visible; //container reappears
  }
  &-branding,
  &-nav {
    // '&' refers to menu (same as 'menu-branding' or 'menu-nav')
    // defines container as a flex container
    display: flex; // flex-wrap controls whether the items are forced in a  singe line (default) or can flow into multiple lines (wrap/wrap-reverse) 
    flex-flow: column wrap; // shorthand for flex-direction (column) and flex-wrap (wrap), note: column value changes original main-axis to a cross-axis
    align-items: center; // defines how flex items are positioned along cross-axis
    justify-content: center; // defines how flex items are positioned along main-axis
    float: left; // floats container to left
    width: 50%; // each container has width of 50% of current screen
    height: 100vh; // takes entire height of current screen, each one takes up full height of current screen
    overflow: hidden; // hide scrollbars
  }
  &-nav {
    // resets margin/padding to 0
    margin: 0;
    padding: 0;
    background: darken($primary-color, 5); // exclusive to sass, similar to lighten which takes two input values
    list-style: none; // gets rid of bullet points
    transform: translate3d(0, -100%, 0); // sent to the top 100% value because of negative value, when invisible, 
    @include easeOut; // mixin transition
    &.show {
      // Slide in effect from top
      transform: translate3d(0, 0, 0) // when 'menu-nav' gets a 'show' class added on, it become visible and brings element with 'menu-nav' down to normal position 
    }
  } // Branding Side
  &-branding {
    background: $primary-color;
    @include easeOut;
    transform: translate3d(0, 100%, 0); // pushing 'menu-branding' 100% up when not visible
    &.show {
      // Slide in effect from bottom
      transform: translate3d(0, 0, 0) // brings 'menu-branding'  to normal position
    }
    .portrait {
      // (15.625rem =250px)
      width: 15.625rem;
      height: 15.625rem;
      background: url(/dist/img/fb_death.png);
      background-repeat: no-repeat;
      background-size: cover;
      border-radius: 50%; // creates the circular border for image
      border: solid 3px $secondary-color;
    }
  }
}