// IMPORT PARTIALS
@import 'config';
@import 'menu';
/* ========================================
TARGET ALL AND BODY
=========================================== */

* {
  // includes padding and border in element's total width and height
  // width/height of elmenet's box model is value specified
  box-sizing: border-box;
}

body {
  @include background;
  background: $primary-color;
  color: set-text-color($primary-color); // value calls function 'set-text-color' from config partial and passes '$primary-color' to function 
  height: 100%; // body has height 100% at all times 
  margin: 0; // resets body's margin to 0 (browser by default gives an elemenet default margin)
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.5; // defines space above/below elements, child elements inherit this value
}

/* ========================================
HEADINGS
=========================================== */

// resets headings margin to 0
h1,
h2,
h3 {
  margin: 0;
  font-weight: 400;
  &.lg-heading {
    // & references all parent elements relative to current element, the first ancestor element 
    // rem unit value multiplier of html font-size (default html font-size:16px)
    // 6rem = 96px (16*6)
    font-size: 6rem;
  }
  &.sm-heading {
    margin-bottom: 2rem; // adds nottom margin to h2 element
    padding: 0.2rem 1rem; // gives padding to heading 2 element
    // rgba wrapped to give background opacity value
    background: rgba(lighten($primary-color, 2), 0.5); // lighten sass exclusive, takes two parameters (first parameter = original color, second parameter = how much to lighten og color)
  }
}

a {
  // target all "a" tags and set color to white and removes line decoration
  color: #fff;
  text-decoration: none;
}

header {
  // position fixed: element is removed from the regular document flow (elements underneath header moved upwards), fixed position elements are always relative to the document and not a particular parent
  position: fixed; // header element will stay fixed at top even when scrolling
  z-index: 2; // z-index creates layer for element, the higher the number the closer to the surface layer and the visibility to user
  width: 100%; // 100% width for responsive header, will stretch across current browser width
}

.text-secondary {
  color: $secondary-color;
}

main {
  // gives main element 4rem(64px) of padding 
  padding: 4rem;
  &#contact,
  &#work,
  &#about {
    min-height: calc(100vh - 3.75rem); // for sticky footer, without will cause footer to move up from orginal position subtract 100vh with height of footer, height of main cannot be less than calc value
  } // height: 100%; 
  .icons {
    // add margin from top of .icons container, pushing container down 1rem
    margin-top: 1rem;
    a {
      padding: 0.4rem;
      &:hover {
        color: $secondary-color;
        @include easeOut;
      }
    }
  }
  &#home {
    // remove scrollbars
    overflow: hidden;
    h1 {
      // viewport height is percentage of current screen's full height
      // target h1 and pushes down 20% of current screen, siblings elements will also move down (increases overall height of main container)
      margin-top: 20vh;
    }
  }
}

/* ========================================
ABOUT PAGE~~~~~~~~~
=========================================== */

.about-info {
  //defines container as grid container
  // grid track is space between two grid lines
  display: grid;
  grid-gap: 1.875rem; // 1.875rem (30px), creates a gap between grid items
  grid-template-areas: // defines grid template by referencing grid areas 
  'bioimage bio bio' 'job1 job2 job3'; // 2 rows and 3 columns
  grid-template-columns: repeat(3, 1fr); // grid-template columns defines the columns width value for the grid track, creates 3 grid column (each column width value is 1/3 of container)
  .bio-image {
    // references bioimage from grid-template-areas
    grid-area: bioimage;
    margin: auto; // browser will determine margin 
    border-radius: 50%;
    border: $secondary-color 3px solid;
  }
  .bio {
    // references bio from grid-template-areas
    grid-area: bio;
    font-size: 1.5rem;
  }
  .job-1 {
    // references job1 from grid-template-areas
    grid-area: job1
  }
  .job-2 {
    // references job2 from grid-template-areas
    grid-area: job2
  }
  .job-3 {
    // references job3 from grid-template-areas
    grid-area: job3
  }
  .job {
    //lighten $primary-color and use as background color for elements with 'job' class 
    background: lighten($primary-color, 5);
    padding: 0.5rem; // .5rem(8px) padding all sides
    border-bottom: $secondary-color 5px solid; // gives border of container
  }
}

/* ========================================
WORK PAGE~~~~~~~~~
=========================================== */

.projects {
  display: grid;
  grid-gap: 1.25rem; // 1.25rem (20px) creates spacing between grid items
  grid-template-columns: repeat(3, 1fr); // specifies 3 columns per row, each grid track to take 33.33% width value of container
  img {
    // resizes images to fit 100% width of container
    width: 100%;
    border: 3px #fff solid; // creates white border around grid items (image)
    &:hover {
      // creates a blur on images when hovered, opacity (0 = fully transparent, 1 = fully opaque)
      opacity: 0.5;
      border-color: $secondary-color;
      @include easeOut; //mixin transition
    }
  }
}

//BUTTON STYLES
.btn {
  // changes button class elements, width/height can be altered and margin/paddings can be altered
  //  line-break not added like block display, element sit next to each other
  // display inline-block
  display: block; //takes up available width of current container and starts on new line 
  padding: 0.5rem 1rem; // .5rem(8px) top/bottom padding, 1rem(16px) right/left padding
  border: 0;
  margin-bottom: 0.3rem;
  &:hover {
    background: $secondary-color;
    color: set-text-color($secondary-color); //call fucntion 'set-text-color' and pass value '$secondary-color' to function argument/parameter
  }
}

.btn-dark {
  // Note: Extend/ Inheritance '@extend', allows sharing of CSS properties between Selectors 
  // Helps with keeping code DRY
  // takes CSS properties from '.btn' selector
  @extend .btn;
  background: darken($primary-color, 50); //darkens primary color by 50 value
  color: #fff;
}

.btn-light {
  @extend .btn;
  background: lighten($primary-color, 50); //darkens primary color
  color: #333;
}

/* ========================================
CONTACT PAGE~~~~~~~~~
=========================================== */

.boxes {
  // defines container as a flex container 
  display: flex;
  flex-wrap: wrap; // wrap value, tries to fit flex items all on one line, the remaining flex items that cannot fit will be moved to next line
  justify-content: space-evenly; // defines alinment of flex items along main axis, space-evenly(items distributed with equal spacing between any two items, includes space to edges)
  align-items: center; //defines alignment of flex items along cross-axis
  margin-top: 1rem; // 1rem (16px) 
  div {
    // styles to each child div of '.boxes'
    font-size: 2rem; // 2rem (32px)
    border: 3px #fff solid; // border around entire container
    padding: 1.5rem 2.5rem; // 1.5rem (24px) and 2.5rem (40px) 
    margin-bottom: 3rem; // 3rem (48px) creates bottom-margin (spacing) between the containers
    @include easeOut; // transition mixin
    &:hover {
      // hover affect on div items
      padding: 0.5rem 1.5rem; // 0.5rem (8px) 1.5rem (24px)
      background: $secondary-color;
      color: set-text-color($secondary-color); // value calls function 'set-text-color' and passes '$secondary-color' input to function arugment/parameter
      span {
        color: set-text-color($secondary-color); // Note: text color turns black, lightness of current passed color value  > 40
      }
    }
  }
}

/* ========================================
FOOTER~~~~
=========================================== */

#main-footer {
  // Note:sticky footer created using calc function in main and creating min-height (viewport height - footer height)
  // centers footer text
  text-align: center;
  padding: 1rem; // 1rem = 16px;
  background: darken($primary-color, 10); // darkens primary-color
  color: set-text-color($primary-color); // Calls function set-text-color and pass $primary-color value in function argument
  height: 3.75rem; // 3.75rem (60px)
}

// IMPORT PARTIAL
// HAS TO BE AT BOTTOM, INITIAL CSS MUST RUN FIRST, THEN MEDIA QUERIES APPLY
@import 'mobile';